//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Linq;
using System.Linq.Expressions;

namespace phukienipadx.Dal.Repository
{
    /// <summary>
    /// Repository for table products_descriptions 
    /// </summary>
    public partial class products_descriptionsRepository
    {
        #region auto generate code

        #region variable define

        IUnitOfWork unitOfWork;

        #endregion

        #region Ctor

        // Default contructor that creates an instance of unit of work
        public products_descriptionsRepository()
        {
            if (null == unitOfWork)
                unitOfWork = new UnitOfWork();
        }

        // Constructor of an instance of unit of work
        public products_descriptionsRepository(IUnitOfWork _unitOfWork)
        {
            unitOfWork = _unitOfWork;
        }

        #endregion

        #region Basic C.R.U.D. operations

        // List of all products_descriptions 
        public IList<products_descriptions> GetAllproducts_descriptions()
        {
            return unitOfWork.GetAll<products_descriptions>();
        }

        // Find all products_descriptions 
        public IList<products_descriptions> Findproducts_descriptions(Expression<Func<products_descriptions, bool>> expression)
        {
            return unitOfWork.Find<products_descriptions>(expression).ToList();
        }

        // Get single products_descriptions 
        public products_descriptions GetSingleproducts_descriptions(Func<products_descriptions, bool> expression)
        {
            return unitOfWork.GetSingle<products_descriptions>(expression);
        }

        // Add a new products_descriptions 
        public products_descriptions Addproducts_descriptions(products_descriptions _products_descriptions)
        {
            unitOfWork.Add<products_descriptions>(_products_descriptions);
            return _products_descriptions;
        }

        // Delete a existed products_descriptions 
        public void Deleteproducts_descriptions(products_descriptions _products_descriptions)
        {
            unitOfWork.Delete<products_descriptions>(_products_descriptions);
        }

        // Delete batch a existed products_descriptions 
        public void DeleteBatchproducts_descriptions(IEnumerable<products_descriptions> collection)
        {
        	foreach(var item in collection)
        	{
        		unitOfWork.Delete<products_descriptions>(item);
        	}
        }

        // Update a existed products_descriptions 
        public products_descriptions Updateproducts_descriptions(products_descriptions _products_descriptions)
        {
            unitOfWork.Update<products_descriptions>(_products_descriptions);
            return _products_descriptions;
        }

        // Refresh an existed products_descriptions 
        public products_descriptions Refeshproducts_descriptions(products_descriptions _products_descriptions)
        {
            unitOfWork.Refresh<products_descriptions>(_products_descriptions);
            return _products_descriptions;
        }

        // Refresh Allproducts_descriptions 
        public void RefreshListproducts_descriptions(IEnumerable<products_descriptions> list)
        {
            unitOfWork.RefreshList<products_descriptions>(list);
        }

        // Commit all changes 
        public void Commit()
        {
            unitOfWork.Commit();
        }

        #endregion

        #endregion

        #region all the custom code


        #endregion
    }
}
