//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Linq;
using System.Linq.Expressions;

namespace phukienipadx.Dal.Repository
{
    /// <summary>
    /// Repository for table orders_products 
    /// </summary>
    public partial class orders_productsRepository
    {
        #region auto generate code

        #region variable define

        IUnitOfWork unitOfWork;

        #endregion

        #region Ctor

        // Default contructor that creates an instance of unit of work
        public orders_productsRepository()
        {
            if (null == unitOfWork)
                unitOfWork = new UnitOfWork();
        }

        // Constructor of an instance of unit of work
        public orders_productsRepository(IUnitOfWork _unitOfWork)
        {
            unitOfWork = _unitOfWork;
        }

        #endregion

        #region Basic C.R.U.D. operations

        // List of all orders_products 
        public IList<orders_products> GetAllorders_products()
        {
            return unitOfWork.GetAll<orders_products>();
        }

        // Find all orders_products 
        public IList<orders_products> Findorders_products(Expression<Func<orders_products, bool>> expression)
        {
            return unitOfWork.Find<orders_products>(expression).ToList();
        }

        // Get single orders_products 
        public orders_products GetSingleorders_products(Func<orders_products, bool> expression)
        {
            return unitOfWork.GetSingle<orders_products>(expression);
        }

        // Add a new orders_products 
        public orders_products Addorders_products(orders_products _orders_products)
        {
            unitOfWork.Add<orders_products>(_orders_products);
            return _orders_products;
        }

        // Delete a existed orders_products 
        public void Deleteorders_products(orders_products _orders_products)
        {
            unitOfWork.Delete<orders_products>(_orders_products);
        }

        // Delete batch a existed orders_products 
        public void DeleteBatchorders_products(IEnumerable<orders_products> collection)
        {
        	foreach(var item in collection)
        	{
        		unitOfWork.Delete<orders_products>(item);
        	}
        }

        // Update a existed orders_products 
        public orders_products Updateorders_products(orders_products _orders_products)
        {
            unitOfWork.Update<orders_products>(_orders_products);
            return _orders_products;
        }

        // Refresh an existed orders_products 
        public orders_products Refeshorders_products(orders_products _orders_products)
        {
            unitOfWork.Refresh<orders_products>(_orders_products);
            return _orders_products;
        }

        // Refresh Allorders_products 
        public void RefreshListorders_products(IEnumerable<orders_products> list)
        {
            unitOfWork.RefreshList<orders_products>(list);
        }

        // Commit all changes 
        public void Commit()
        {
            unitOfWork.Commit();
        }

        #endregion

        #endregion

        #region all the custom code


        #endregion
    }
}
