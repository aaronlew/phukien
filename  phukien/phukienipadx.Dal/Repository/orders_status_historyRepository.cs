//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Linq;
using System.Linq.Expressions;

namespace phukienipadx.Dal.Repository
{
    /// <summary>
    /// Repository for table orders_status_history 
    /// </summary>
    public partial class orders_status_historyRepository
    {
        #region auto generate code

        #region variable define

        IUnitOfWork unitOfWork;

        #endregion

        #region Ctor

        // Default contructor that creates an instance of unit of work
        public orders_status_historyRepository()
        {
            if (null == unitOfWork)
                unitOfWork = new UnitOfWork();
        }

        // Constructor of an instance of unit of work
        public orders_status_historyRepository(IUnitOfWork _unitOfWork)
        {
            unitOfWork = _unitOfWork;
        }

        #endregion

        #region Basic C.R.U.D. operations

        // List of all orders_status_history 
        public IList<orders_status_history> GetAllorders_status_history()
        {
            return unitOfWork.GetAll<orders_status_history>();
        }

        // Find all orders_status_history 
        public IList<orders_status_history> Findorders_status_history(Expression<Func<orders_status_history, bool>> expression)
        {
            return unitOfWork.Find<orders_status_history>(expression).ToList();
        }

        // Get single orders_status_history 
        public orders_status_history GetSingleorders_status_history(Func<orders_status_history, bool> expression)
        {
            return unitOfWork.GetSingle<orders_status_history>(expression);
        }

        // Add a new orders_status_history 
        public orders_status_history Addorders_status_history(orders_status_history _orders_status_history)
        {
            unitOfWork.Add<orders_status_history>(_orders_status_history);
            return _orders_status_history;
        }

        // Delete a existed orders_status_history 
        public void Deleteorders_status_history(orders_status_history _orders_status_history)
        {
            unitOfWork.Delete<orders_status_history>(_orders_status_history);
        }

        // Delete batch a existed orders_status_history 
        public void DeleteBatchorders_status_history(IEnumerable<orders_status_history> collection)
        {
        	foreach(var item in collection)
        	{
        		unitOfWork.Delete<orders_status_history>(item);
        	}
        }

        // Update a existed orders_status_history 
        public orders_status_history Updateorders_status_history(orders_status_history _orders_status_history)
        {
            unitOfWork.Update<orders_status_history>(_orders_status_history);
            return _orders_status_history;
        }

        // Refresh an existed orders_status_history 
        public orders_status_history Refeshorders_status_history(orders_status_history _orders_status_history)
        {
            unitOfWork.Refresh<orders_status_history>(_orders_status_history);
            return _orders_status_history;
        }

        // Refresh Allorders_status_history 
        public void RefreshListorders_status_history(IEnumerable<orders_status_history> list)
        {
            unitOfWork.RefreshList<orders_status_history>(list);
        }

        // Commit all changes 
        public void Commit()
        {
            unitOfWork.Commit();
        }

        #endregion

        #endregion

        #region all the custom code


        #endregion
    }
}
