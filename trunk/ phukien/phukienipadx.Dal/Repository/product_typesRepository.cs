//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Linq;
using System.Linq.Expressions;

namespace phukienipadx.Dal.Repository
{
    /// <summary>
    /// Repository for table product_types 
    /// </summary>
    public partial class product_typesRepository
    {
        #region auto generate code

        #region variable define

        IUnitOfWork unitOfWork;

        #endregion

        #region Ctor

        // Default contructor that creates an instance of unit of work
        public product_typesRepository()
        {
            if (null == unitOfWork)
                unitOfWork = new UnitOfWork();
        }

        // Constructor of an instance of unit of work
        public product_typesRepository(IUnitOfWork _unitOfWork)
        {
            unitOfWork = _unitOfWork;
        }

        #endregion

        #region Basic C.R.U.D. operations

        // List of all product_types 
        public IList<product_types> GetAllproduct_types()
        {
            return unitOfWork.GetAll<product_types>();
        }

        // Find all product_types 
        public IList<product_types> Findproduct_types(Expression<Func<product_types, bool>> expression)
        {
            return unitOfWork.Find<product_types>(expression).ToList();
        }

        // Get single product_types 
        public product_types GetSingleproduct_types(Func<product_types, bool> expression)
        {
            return unitOfWork.GetSingle<product_types>(expression);
        }

        // Add a new product_types 
        public product_types Addproduct_types(product_types _product_types)
        {
            unitOfWork.Add<product_types>(_product_types);
            return _product_types;
        }

        // Delete a existed product_types 
        public void Deleteproduct_types(product_types _product_types)
        {
            unitOfWork.Delete<product_types>(_product_types);
        }

        // Delete batch a existed product_types 
        public void DeleteBatchproduct_types(IEnumerable<product_types> collection)
        {
        	foreach(var item in collection)
        	{
        		unitOfWork.Delete<product_types>(item);
        	}
        }

        // Update a existed product_types 
        public product_types Updateproduct_types(product_types _product_types)
        {
            unitOfWork.Update<product_types>(_product_types);
            return _product_types;
        }

        // Refresh an existed product_types 
        public product_types Refeshproduct_types(product_types _product_types)
        {
            unitOfWork.Refresh<product_types>(_product_types);
            return _product_types;
        }

        // Refresh Allproduct_types 
        public void RefreshListproduct_types(IEnumerable<product_types> list)
        {
            unitOfWork.RefreshList<product_types>(list);
        }

        // Commit all changes 
        public void Commit()
        {
            unitOfWork.Commit();
        }

        #endregion

        #endregion

        #region all the custom code


        #endregion
    }
}
