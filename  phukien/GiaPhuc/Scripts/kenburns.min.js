(function (e, t, n, r) { function f(t, n) { this.element = t; this.options = e.extend({}, o, n); this._defaults = o; this._name = s; this.maxSlides = this.options.images.length; this.init() } function l() { var e = n.createElement("p"), i, s = { WebkitTransform: "-webkit-transform", MozTransform: "-moz-transform" }; n.body.insertBefore(e, null); for (var o in s) { if (e.style[o] !== r) { e.style[o] = "translate3d(1px,1px,1px)"; i = t.getComputedStyle(e).getPropertyValue(s[o]) } } n.body.removeChild(e); return i !== r && i.length > 0 && i !== "none" } var s = "Kenburns", o = { images: [], duration: 400, fadeSpeed: 500, scale: 1, ease3d: "cubic-bezier(.81, 0, .26, 1)", onLoadingComplete: function () { }, onSlideComplete: function () { }, onListComplete: function () { }, getSlideIndex: function () { return a } }; var u = {}; var a = 0; f.prototype.init = function () { var t = this.options.images; var n = this; this.width = e(this.element).width(); this.height = e(this.element).height(); this.has3d = l(); for (i in t) { u["image" + i] = {}; u["image" + i].loaded = false; this.attachImage(t[i], "image" + i, i) } var r = e("<div/>"); r.addClass("loader"); r.css({ position: "absolute", "z-index": 1e4 }); e(this.element).prepend(r) }; f.prototype.attachImage = function (t, n, r) { var i = this; var s = e("<div/>"); s.attr("class", "kb-slide"); s.css({ opacity: 0 }); var o = e("<img />"); o.attr("src", t); o.attr("alt", n); s.html(o); if (this.has3d) { o.css({ "-webkit-transform-origin": "left top" }); o.css({ "-moz-transform-origin": "left top" }); o.css({ "-webkit-transform": "scale(" + i.options.scale + ") translate3d(0,0,0)" }); o.css({ "-moz-transform": "scale(" + i.options.scale + ") translate3d(0,0,0)" }) } this.doTransition = this.has3d ? this.transition3d : this.transition; o.load(function () { u["image" + r].element = this; u["image" + r].loaded = true; u["image" + r].width = e(this).width(); u["image" + r].width = e(this).height(); i.insertAt(r, s); i.resume(r) }) }; f.prototype.resume = function (t) { if (t == 0) { this.startTransition(0); e(this.element).find(".loader").hide() } if (t == this.holdup) { e("#status").html(""); e(this.element).find(".loader").hide(); this.startTransition(this.holdup) } if (this.checkLoadProgress() == true) { e(this.element).find(".stalled").each(function () { e(this).css({ opacity: 1, "z-index": 1 }); e(this).removeClass("stalled") }); this.options.onLoadingComplete() } }; f.prototype.checkLoadProgress = function () { var e = true; for (i = 0; i < this.maxSlides; i++) { if (u["image" + i].loaded == false) { e = false } } return e }; f.prototype.wait = function () { clearInterval(this.interval); e("#status").html("loading"); e(this.element).find(".loader").show(); var t = u["image" + (a - 1)].element; e(t).parent().stop(true, true); e(t).parent().addClass("stalled") }; f.prototype.startTransition = function (e) { var t = this; a = e; t.doTransition(); this.interval = setInterval(function () { if (a < t.maxSlides - 1) { a++ } else { a = 0 } if (u["image" + a].loaded == false) { t.holdup = a; t.wait() } else { t.doTransition() } }, this.options.duration) }; f.prototype.chooseCorner = function () { var t = this.options.scale; var n = u["image" + a].element; var r = n.height / n.width; var i = Math.floor(e(this.element).width() * (1 / t)); var s = Math.floor(e(this.element).width() * r * (1 / t)); e(n).width(i); e(n).height(s); var o = e(this.element).width(); var f = e(this.element).height(); var l = [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 1}]; var c = Math.floor(Math.random() * 4); var h = l[c]; l.splice(c, 1); var p = l[Math.floor(Math.random() * 3)]; var d = { startX: h.x * (o - i * t), startY: h.y * (f - s * t), endX: p.x * (o - i), endY: p.y * (f - s) }; return d }; f.prototype.transition3d = function () { var t = this; var n = this.options.scale; var r = u["image" + a].element; var i = this.chooseCorner(); e(r).css({ "-webkit-transition": "none" }); e(r).css({ "-moz-transition": "none" }); e(r).css({ "-webkit-transform": "scale(" + n + ") translate3d(" + i.startX + "px," + i.startY + "px,0)" }); e(r).css({ "-moz-transform": "scale(" + n + ") translate3d(" + i.startX + "px," + i.startY + "px,0)" }); e(r).parent().css({ opacity: 0, "z-index": "3" }); e(r).parent().animate({ opacity: 1 }, t.options.fadeSpeed); e(r).css({ "-webkit-transition": "-webkit-transform " + (t.options.duration + t.options.fadeSpeed) + "ms " + t.options.ease3d }); e(r).css({ "-moz-transition": "-moz-transform " + (t.options.duration + t.options.fadeSpeed) + "ms " + t.options.ease3d }); e(r).css({ "-webkit-transform": "scale(1) translate3d(" + i.endX + "px," + i.endY + "px,0)" }); e(r).css({ "-moz-transform": "scale(1) translate3d(" + i.endX + "px," + i.endY + "px,0)" }); this.transitionOut(); this.options.onSlideComplete() }; f.prototype.transition = function () { var t = this; var n = this.options.scale; var r = u["image" + a].element; var i = e(r).width(); var s = e(r).height(); var o = this.chooseCorner(); e(r).css({ left: o.startX, top: o.startY, width: i * n, height: s * n }); e(r).animate({ left: o.endX, top: o.endY, width: i, height: s }, t.options.duration + t.options.fadeSpeed); e(r).parent().css({ opacity: 0, "z-index": 3 }); e(r).parent().animate({ opacity: 1 }, t.options.fadeSpeed); this.transitionOut(); this.options.onSlideComplete() }; f.prototype.transitionOut = function () { var t = this; var n = u["image" + a].element; e(n).parent().delay(t.options.duration).animate({ opacity: 0 }, t.options.fadeSpeed, function () { e(this).css({ "z-index": 1 }) }) }; f.prototype.insertAt = function (t, n) { var r = e(this.element).children().size(); if (t < 0) { t = Math.max(0, r + 1 + t) } var i = e(this.element).append(n); if (t < r) { e(this.element).children().eq(t).before(e(this.element).children().last()) } }; e.fn[s] = function (t) { return this.each(function () { if (!e.data(this, "plugin_" + s)) { e.data(this, "plugin_" + s, new f(this, t)) } }) } })(jQuery, window, document)